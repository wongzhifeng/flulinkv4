"use strict";(()=>{var t={};t.id=360,t.ids=[360],t.modules={399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4122:(t,e,i)=>{i.r(e),i.d(e,{originalPathname:()=>m,patchFetch:()=>y,requestAsyncStorage:()=>h,routeModule:()=>l,serverHooks:()=>u,staticGenerationAsyncStorage:()=>d});var a={};i.r(a),i.d(a,{POST:()=>p});var r=i(9303),n=i(8716),o=i(670),s=i(7070);let c=new(i(2660)).uN;async function p(t){try{let{user1:e,user2:i}=await t.json(),a=await c.matchingAgent.calculateUserCompatibility(e,i);return s.NextResponse.json({compatibility:a})}catch(t){return console.error("User Compatibility API Error:",t),s.NextResponse.json({error:"Failed to calculate user compatibility"},{status:500})}}let l=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/agentrouter/matching/compatibility/route",pathname:"/api/agentrouter/matching/compatibility",filename:"route",bundlePath:"app/api/agentrouter/matching/compatibility/route"},resolvedPagePath:"/Users/mac/Desktop/code/flulink/src/app/api/agentrouter/matching/compatibility/route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:h,staticGenerationAsyncStorage:d,serverHooks:u}=l,m="/api/agentrouter/matching/compatibility/route";function y(){return(0,o.patchFetch)({serverHooks:u,staticGenerationAsyncStorage:d})}},2660:(t,e,i)=>{i.d(e,{uN:()=>a});class a{constructor(t=process.env.NEXT_PUBLIC_AI_SERVICE_URL||"http://localhost:8000"){this.propagationAgent={async calculatePropagationPath(t,e){return(await fetch(`${this.aiServiceUrl}/api/ai/optimize-propagation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({star_seed:t,context:e})})).json()},async predictPropagationPotential(t){let e=await fetch(`${this.aiServiceUrl}/api/ai/predict-potential`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({star_seed:t})});return(await e.json()).potential_score}},this.matchingAgent={async findSimilarUsers(t,e,i=10){let a=await fetch(`${this.aiServiceUrl}/api/ai/find-similar-users`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({seed_vector:t,user_pool:e.map(t=>({id:t.id,interest_vector:t.interest_vector})),limit:i})});return(await a.json()).similar_users},async calculateUserCompatibility(t,e){let i=await fetch(`${this.aiServiceUrl}/api/ai/calculate-compatibility`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user1:t,user2:e})});return(await i.json()).compatibility_score}},this.contentAgent={async analyzeContent(t){return(await fetch(`${this.aiServiceUrl}/api/ai/analyze-content`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:t})})).json()},async generateContentVector(t){let e=await fetch(`${this.aiServiceUrl}/api/ai/embed-text`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:t})});return(await e.json()).vector},async extractSpectralTags(t){let e=await fetch(`${this.aiServiceUrl}/api/ai/extract-tags`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:t})});return(await e.json()).tags}},this.optimizationAgent={async optimizePropagationPath(t){return(await fetch(`${this.aiServiceUrl}/api/ai/optimize-path`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:t})})).json()},async calculateOptimalTiming(t,e){let i=await fetch(`${this.aiServiceUrl}/api/ai/calculate-timing`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({seed:t,users:e})});return(await i.json()).optimal_times.map(t=>new Date(t))}},this.aiServiceUrl=t}}new a}};var e=require("../../../../../webpack-runtime.js");e.C(t);var i=t=>e(e.s=t),a=e.X(0,[948,972],()=>i(4122));module.exports=a})();