"use strict";(()=>{var t={};t.id=509,t.ids=[509],t.modules={399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7814:(t,e,a)=>{a.r(e),a.d(e,{originalPathname:()=>y,patchFetch:()=>m,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>u});var i={};a.r(i),a.d(i,{POST:()=>p});var n=a(9303),r=a(8716),o=a(670),s=a(7070);let c=new(a(2660)).uN;async function p(t){try{let{content:e}=await t.json(),a=await c.contentAgent.analyzeContent(e);return s.NextResponse.json(a)}catch(t){return console.error("Content Analysis API Error:",t),s.NextResponse.json({error:"Failed to analyze content"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/agentrouter/content/analyze/route",pathname:"/api/agentrouter/content/analyze",filename:"route",bundlePath:"app/api/agentrouter/content/analyze/route"},resolvedPagePath:"/Users/mac/Desktop/code/flulink/src/app/api/agentrouter/content/analyze/route.ts",nextConfigOutput:"standalone",userland:i}),{requestAsyncStorage:d,staticGenerationAsyncStorage:u,serverHooks:h}=l,y="/api/agentrouter/content/analyze/route";function m(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:u})}},2660:(t,e,a)=>{a.d(e,{uN:()=>i});class i{constructor(t=process.env.NEXT_PUBLIC_AI_SERVICE_URL||"http://localhost:8000"){this.propagationAgent={async calculatePropagationPath(t,e){return(await fetch(`${this.aiServiceUrl}/api/ai/optimize-propagation`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({star_seed:t,context:e})})).json()},async predictPropagationPotential(t){let e=await fetch(`${this.aiServiceUrl}/api/ai/predict-potential`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({star_seed:t})});return(await e.json()).potential_score}},this.matchingAgent={async findSimilarUsers(t,e,a=10){let i=await fetch(`${this.aiServiceUrl}/api/ai/find-similar-users`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({seed_vector:t,user_pool:e.map(t=>({id:t.id,interest_vector:t.interest_vector})),limit:a})});return(await i.json()).similar_users},async calculateUserCompatibility(t,e){let a=await fetch(`${this.aiServiceUrl}/api/ai/calculate-compatibility`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user1:t,user2:e})});return(await a.json()).compatibility_score}},this.contentAgent={async analyzeContent(t){return(await fetch(`${this.aiServiceUrl}/api/ai/analyze-content`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:t})})).json()},async generateContentVector(t){let e=await fetch(`${this.aiServiceUrl}/api/ai/embed-text`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({text:t})});return(await e.json()).vector},async extractSpectralTags(t){let e=await fetch(`${this.aiServiceUrl}/api/ai/extract-tags`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:t})});return(await e.json()).tags}},this.optimizationAgent={async optimizePropagationPath(t){return(await fetch(`${this.aiServiceUrl}/api/ai/optimize-path`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({path:t})})).json()},async calculateOptimalTiming(t,e){let a=await fetch(`${this.aiServiceUrl}/api/ai/calculate-timing`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({seed:t,users:e})});return(await a.json()).optimal_times.map(t=>new Date(t))}},this.aiServiceUrl=t}}new i}};var e=require("../../../../../webpack-runtime.js");e.C(t);var a=t=>e(e.s=t),i=e.X(0,[948,972],()=>a(7814));module.exports=i})();