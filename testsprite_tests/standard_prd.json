{
  "meta": {
    "project": "FluLink",
    "date": "2025-10-15",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "FluLink is a comprehensive platform designed to manage and monitor virus strains using advanced AI and geospatial algorithms. It integrates user authentication, interactive star cluster visualization, and AI-powered vector similarity search within a performant and cloud-deployed system.",
  "core_goals": [
    "Provide secure and reliable user authentication and profile management.",
    "Enable creation, visualization, and management of virus strains and their geospatial clusters.",
    "Leverage AI and vector database technology for intelligent similarity search and analytics.",
    "Ensure high performance and scalability via cloud-native deployment with Docker and Zeabur.",
    "Implement a comprehensive monitoring system to track system health and data propagation effectively."
  ],
  "key_features": [
    "User Authentication System with registration and login leveraging PocketBase backend.",
    "Responsive Navigation Components including top navigation, bottom navigation, and sidebar.",
    "Reusable UI Component Library featuring buttons, cards, inputs, modals, etc.",
    "Main Dashboard Home Page with welcome messages and quick action access.",
    "User Profile Page for personal settings and usage statistics.",
    "Creation Interface for star seeds enabling intuitive strain creation.",
    "Star Clusters Page providing management and viewing functionalities for virus clusters.",
    "Interactive Star Map Component for geospatial visualization of clusters.",
    "AI Service backend using FastAPI for processing AI and vector operations.",
    "Integration with ChromaDB vector database for advanced similarity search.",
    "Comprehensive Deployment Configuration using Docker and Zeabur for cloud hosting."
  ],
  "user_flow_summary": [
    "User registers or logs in through the authentication system and gains access to the platform.",
    "From the main dashboard, users navigate to create new star seeds (virus strains) or to view existing clusters.",
    "Users interact with the star map to explore and analyze clusters visually.",
    "Profile management allows users to update their settings and view personal statistics.",
    "The AI Service processes inputs and returns similarity matches to assist in monitoring and analysis.",
    "System monitoring components track API usage, deployment status, and performance for maintenance."
  ],
  "validation_criteria": [
    "User authentication must support secure registration, login, and session management with full backend integration.",
    "Navigation components should be fully responsive and intuitive across all device types.",
    "UI components must be reusable with consistent styling and accessibility compliance.",
    "Dashboard, profile, create, and clusters pages need to be fully functional and tested end-to-end.",
    "Star map visualization should accurately reflect underlying data and respond smoothly to user interaction.",
    "AI vector database integration must produce accurate similarity search results with acceptable latency.",
    "Deployment and monitoring must demonstrate stability, performance optimization, and zero downtime in cloud environment.",
    "All features must align with the project's guiding philosophy and technical constraints documented in memory.md."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 14.2.0",
      "React 18",
      "Tailwind CSS",
      "PocketBase",
      "FastAPI",
      "ChromaDB",
      "Docker",
      "Zeabur"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "User login and registration with PocketBase backend",
        "files": [
          "src/app/(auth)/login/page.tsx",
          "src/app/(auth)/register/page.tsx",
          "src/app/(auth)/layout.tsx",
          "src/lib/pocketbase.ts"
        ]
      },
      {
        "name": "Navigation Components",
        "description": "Top navigation, bottom navigation, and sidebar components",
        "files": [
          "src/components/navigation/index.tsx"
        ]
      },
      {
        "name": "UI Component Library",
        "description": "Reusable UI components including Button, Card, Input, Modal, etc.",
        "files": [
          "src/components/ui/index.tsx"
        ]
      },
      {
        "name": "Home Page",
        "description": "Main dashboard with welcome message and quick actions",
        "files": [
          "src/app/(main)/page.tsx"
        ]
      },
      {
        "name": "Profile Page",
        "description": "User profile management with settings and statistics",
        "files": [
          "src/app/(main)/profile/page.tsx",
          "src/components/user-profile/user-profile.tsx"
        ]
      },
      {
        "name": "Create Page",
        "description": "Star seed creation interface",
        "files": [
          "src/app/(main)/create/page.tsx",
          "src/components/seed-creator/ai-seed-creator.tsx"
        ]
      },
      {
        "name": "Clusters Page",
        "description": "Star clusters management and viewing",
        "files": [
          "src/app/(main)/clusters/page.tsx",
          "src/components/star-clusters/star-cluster-view.tsx"
        ]
      },
      {
        "name": "Star Map Component",
        "description": "Interactive star map visualization",
        "files": [
          "src/components/star-map/star-map.tsx"
        ]
      },
      {
        "name": "Vector Database Integration",
        "description": "AI-powered vector similarity search and matching",
        "files": [
          "src/lib/vector-db.ts"
        ]
      },
      {
        "name": "Utility Functions",
        "description": "Common utility functions for formatting, validation, etc.",
        "files": [
          "src/lib/utils.ts"
        ]
      },
      {
        "name": "AI Service",
        "description": "FastAPI backend for AI operations and vector processing",
        "files": [
          "ai-service/main.py",
          "ai-service/requirements.txt",
          "ai-service/Dockerfile"
        ]
      },
      {
        "name": "Database Schema",
        "description": "PocketBase database schema and API definitions",
        "files": [
          "pocketbase/schema.json",
          "pocketbase/README.md"
        ]
      },
      {
        "name": "Deployment Configuration",
        "description": "Docker and Zeabur deployment configurations",
        "files": [
          "Dockerfile.frontend",
          "zeabur.yaml",
          "next.config.js",
          "package.json"
        ]
      }
    ]
  }
}
